type Query {
  getUser(id: Int!): User
  getUsers: [User!]!
  refresh: Refresh
  logout: Boolean
}
type Mutation {
  registration(user: Registration!): User
  login(user: Login!): User
  update(id: Int!, user: UpdateUser, pass: String, old_pass: String): User
  remove(id: Int!): Boolean 
}
type Refresh {
  refreshToken: String
  accessToken: String
  user: User
}
type User {
  id: Int!
  email: String!
  login: String!
  avatar: String!
  activationLink: String
  isActivated: Boolean
  createdAt: Date
  accessToken: String
  refreshToken: String
  feed: Feed
  backgroundImage: String
}

type Feed {
  id: Int
  posts: [Post!]!
}
input UpdateUser {
  email: String
  pass: String
  login: String
  avatar: [FILE]
  activationLink: String
  isActivated: Boolean
}
input Registration {
  email: String!
  pass: String!
  pass2: String!
}
input Login {
  email: String!
  pass: String!
}
